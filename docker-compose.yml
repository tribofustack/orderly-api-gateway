version: '3'

networks:
  orderly-net:
    driver: bridge
    external: false
volumes:
  ms_checkin_db:
  ms_checkout_db:
  ms_financial_db:
  # kong_data: {}

services:
  rabbitmq:
    build: ./infra/rabbitmq
    container_name: rabbitmq-server
    env_file: ./infra/rabbitmq/.env
    environment:
      - RABBITMQ_ERLANG_COOKIE=TRIBUFUSTACK
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - orderly-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://rabbitmq:15672"]
      interval: 30s
      timeout: 10s
      retries: 5
 
  kong:
    build: ./infra/kong
    container_name: kong-stateless
    volumes:
      - ./infra/kong/kong-config.yml:/tmp/kong-config.yml
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /tmp/kong-config.yml
      KONG_PLUGINS: bundled
    restart: always
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - orderly-net
    ports:
      # - 8000:8000 # disponivel para uso
      # - 8001:8001 # api do kong
      - 8444:8444
      - 8443:8443

  nginx:
    build: ./infra/nginx
    container_name: nginx-proxy
    ports:
      - 80:80
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - orderly-net
    depends_on:
      - ms_checkin
      - kong

  # checkin
  ms_checkin_db:
    build: ./infra/postgres
    container_name: ms-checkin-database
    env_file:
      - ./ms-checkin/.env.production
    environment:
      - POSTGRES_USER=checkin_user
      - POSTGRES_PASSWORD=checkin_password
      - POSTGRES_DB=checkin_database
      - PGDATA=/data/postgres
    volumes:
      - ms_checkin_db:/data/postgres
    networks:
      - orderly-net
    restart: unless-stopped
  ms_checkin:
    build: ./ms-checkin
    container_name: ms-checkin-api
    volumes:
      - ./ms-checkin:/usr/checkin/api
    networks:
      - orderly-net
    depends_on:
      - ms_checkin_db
      - rabbitmq
    restart: always
    links:
      - ms_checkin_db
      - rabbitmq
    env_file:
      - ./ms-checkin/.env.production
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://ms_checkin:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # checkout
  ms_checkout_db:
    build: ./infra/postgres
    container_name: ms-checkout-database
    env_file:
      - ./ms-checkout/.env.production
    environment:
      - POSTGRES_USER=checkout_user
      - POSTGRES_PASSWORD=checkout_password
      - POSTGRES_DB=checkout_database
      - PGDATA=/data/postgres
    volumes:
      - ms_checkout_db:/data/postgres
    networks:
      - orderly-net
    restart: unless-stopped    
  ms_checkout:
    build: ./ms-checkout
    container_name: ms-checkout-api
    volumes:
      - ./ms-checkout:/usr/checkout/api
    networks:
      - orderly-net
    restart: on-failure
    depends_on:
      - ms_checkout_db
      - rabbitmq
    links:
      - ms_checkout_db
      - rabbitmq
    env_file:
      - ./ms-checkout/.env.production
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://ms_checkout:3002/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # financial
  ms_financial_db:
    build: ./infra/postgres
    container_name: ms-financial-database
    env_file:
      - ./ms-financial/.env.production
    environment:
      - POSTGRES_USER=financial_user
      - POSTGRES_PASSWORD=financial_password
      - POSTGRES_DB=financial_database
      - PGDATA=/data/postgres
    volumes:
      - ms_financial_db:/data/postgres
    networks:
      - orderly-net
    restart: unless-stopped
  ms_financial:
    build: ./ms-financial
    container_name: ms-financial-api
    volumes:
      - ./ms-financial:/usr/financial/api
    networks:
      - orderly-net
    depends_on:
      - ms_financial_db
      - rabbitmq
    restart: on-failure
    links:
      - ms_financial_db
      - rabbitmq
    env_file:
      - ./ms-financial/.env.production
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://ms_financial:3003/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # auth
  # ms_auth_db:
  #   image: mongo
  #   container_name: ms-auth-database
  #   restart: always
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #   env_file:
  #     - ./ms-auth/.env.production
  #   networks:
  #     - orderly-net  
  # ms_auth:
    # build: ./ms-auth
    # container_name: ms-auth-api
    # volumes:
    #   - ./ms-auth:/usr/auth/api
    # networks:
    #   - orderly-net
    # depends_on:
    #   - ms_auth_db
    # restart: on-failure
    # links:
    #   - ms_auth_db
    # env_file:
    #   - ./ms-auth/.env.production