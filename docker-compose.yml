version: '3'

services:
  rabbitmq:
    build: ./infra/rabbitmq
    container_name: rabbitmq-server
    env_file: ./infra/rabbitmq/.env
    environment:
      - RABBITMQ_ERLANG_COOKIE=TRIBUFUSTACK
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    # ports:
    #   - 15672:15672
    #   - 5672:5672
    networks:
      - orderly-net
 
  kong:
    build: ./infra/kong
    container_name: kong-stateless
    volumes:
      - ./infra/kong/kong-config.yml:/tmp/kong-config.yml
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /tmp/kong-config.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_LOG_LEVEL: debug
      KONG_PLUGINS: bundled
    restart: on-failure
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - orderly-net
    ports:
      # - 8000:8000 # disponivel para uso
      # - 8001:8001 # api do kong
      - 8444:8444
      - 8443:8443

  nginx:
    build: ./infra/nginx
    container_name: nginx-proxy
    ports:
      - 80:80
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - orderly-net
    depends_on:
      - ms_checkin
      - kong


  #checkin
  ms_checkin_db:
    build: ./infra/postgres
    container_name: ms-checkin-database
    env_file:
      - ./ms-checkin/.env.production
    environment:
      - POSTGRES_USER=checkin_user
      - POSTGRES_PASSWORD=checkin_password
      - POSTGRES_DB=checkin_database
      - PGDATA=/data/postgres
    volumes:
      - ms_checkin_db:/data/postgres
    networks:
      - orderly-net
    restart: unless-stopped
  ms_checkin:
    build: ./ms-checkin
    container_name: ms-checkin-api
    volumes:
      - ./ms-checkin:/usr/checkin/api
    networks:
      - orderly-net
    depends_on:
      - ms_checkin_db
    restart: always
    links:
      - ms_checkin_db
    env_file:
      - ./ms-checkin/.env.production
    # ports:
    #   - 3001:3001
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://ms_checkin:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

networks:
  orderly-net:
    driver: bridge
    external: false

volumes:
  ms_checkin_db:
  kong_data: {}